// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoInvolution.MassageShop.EntityFramework;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NoInvolution.MassageShop.MigrationTool.Migrations
{
    [DbContext(typeof(MassageDbContext))]
    partial class MassageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NoInvolution.MassageShop.Domain.PersonnelContext.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatorID")
                        .HasColumnType("integer");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyUserID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NoInvolution.MassageShop.Domain.PersonnelContext.Technician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatorID")
                        .HasColumnType("integer");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyUserID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("NoInvolution.MassageShop.Domain.ReserveContext.MassageSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatorID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyUserID")
                        .HasColumnType("integer");

                    b.Property<int?>("ReserveCustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReserveCustomerId");

                    b.ToTable("MassageSchedules");
                });

            modelBuilder.Entity("NoInvolution.MassageShop.Domain.ReserveContext.ScheduleReserveCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EstimatedArrivalTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ReserveTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ScheduleReserveCustomer");
                });

            modelBuilder.Entity("NoInvolution.MassageShop.Domain.PersonnelContext.Technician", b =>
                {
                    b.OwnsOne("NoInvolution.MassageShop.Domain.PersonnelContext.TechnicianContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<int>("TechnicianId")
                                .HasColumnType("integer");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("TechnicianId");

                            b1.ToTable("Technicians");

                            b1.WithOwner()
                                .HasForeignKey("TechnicianId");
                        });

                    b.Navigation("ContactInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("NoInvolution.MassageShop.Domain.ReserveContext.MassageSchedule", b =>
                {
                    b.HasOne("NoInvolution.MassageShop.Domain.ReserveContext.ScheduleReserveCustomer", "ReserveCustomer")
                        .WithMany()
                        .HasForeignKey("ReserveCustomerId");

                    b.OwnsOne("NoInvolution.MassageShop.Domain.ReserveContext.ScheduleTimeRange", "WorkTime", b1 =>
                        {
                            b1.Property<int>("MassageScheduleId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("EndTime")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("StartTime")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("MassageScheduleId");

                            b1.ToTable("MassageSchedules");

                            b1.WithOwner()
                                .HasForeignKey("MassageScheduleId");
                        });

                    b.Navigation("ReserveCustomer");

                    b.Navigation("WorkTime")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
