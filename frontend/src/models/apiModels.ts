/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.11.3.0 (NJsonSchema v10.4.4.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming

import moment from 'moment';


export class CreateScheduleDto implements ICreateScheduleDto {
    teachnicianId?: number;
    startTime?: moment.Moment;
    endTime?: moment.Moment;

    constructor(data?: ICreateScheduleDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.teachnicianId = _data["teachnicianId"] !== undefined ? _data["teachnicianId"] : <any>null;
            this.startTime = _data["startTime"] ? moment(_data["startTime"].toString()) : <any>null;
            this.endTime = _data["endTime"] ? moment(_data["endTime"].toString()) : <any>null;
        }
    }

    static fromJS(data: any): CreateScheduleDto {
        data = typeof data === 'object' ? data : {};
        let result = new CreateScheduleDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["teachnicianId"] = this.teachnicianId !== undefined ? this.teachnicianId : <any>null;
        data["startTime"] = this.startTime ? this.startTime.toISOString() : <any>null;
        data["endTime"] = this.endTime ? this.endTime.toISOString() : <any>null;
        return data; 
    }
}

export interface ICreateScheduleDto {
    teachnicianId?: number;
    startTime?: moment.Moment;
    endTime?: moment.Moment;
}

export class DateTimeOffsetSimpleDto implements IDateTimeOffsetSimpleDto {
    data?: moment.Moment;

    constructor(data?: IDateTimeOffsetSimpleDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.data = _data["data"] ? moment(_data["data"].toString()) : <any>null;
        }
    }

    static fromJS(data: any): DateTimeOffsetSimpleDto {
        data = typeof data === 'object' ? data : {};
        let result = new DateTimeOffsetSimpleDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["data"] = this.data ? this.data.toISOString() : <any>null;
        return data; 
    }
}

export interface IDateTimeOffsetSimpleDto {
    data?: moment.Moment;
}

export class MassageScheduleDto implements IMassageScheduleDto {
    id?: number;
    startTime?: moment.Moment;
    endTime?: moment.Moment;
    state?: ScheduleState;

    constructor(data?: IMassageScheduleDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : <any>null;
            this.startTime = _data["startTime"] ? moment(_data["startTime"].toString()) : <any>null;
            this.endTime = _data["endTime"] ? moment(_data["endTime"].toString()) : <any>null;
            this.state = _data["state"] !== undefined ? _data["state"] : <any>null;
        }
    }

    static fromJS(data: any): MassageScheduleDto {
        data = typeof data === 'object' ? data : {};
        let result = new MassageScheduleDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id !== undefined ? this.id : <any>null;
        data["startTime"] = this.startTime ? this.startTime.toISOString() : <any>null;
        data["endTime"] = this.endTime ? this.endTime.toISOString() : <any>null;
        data["state"] = this.state !== undefined ? this.state : <any>null;
        return data; 
    }
}

export interface IMassageScheduleDto {
    id?: number;
    startTime?: moment.Moment;
    endTime?: moment.Moment;
    state?: ScheduleState;
}

export class ReserveScheduleDto implements IReserveScheduleDto {
    customerId?: number;
    arrivalTime?: moment.Moment | null;

    constructor(data?: IReserveScheduleDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.customerId = _data["customerId"] !== undefined ? _data["customerId"] : <any>null;
            this.arrivalTime = _data["arrivalTime"] ? moment(_data["arrivalTime"].toString()) : <any>null;
        }
    }

    static fromJS(data: any): ReserveScheduleDto {
        data = typeof data === 'object' ? data : {};
        let result = new ReserveScheduleDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["customerId"] = this.customerId !== undefined ? this.customerId : <any>null;
        data["arrivalTime"] = this.arrivalTime ? this.arrivalTime.toISOString() : <any>null;
        return data; 
    }
}

export interface IReserveScheduleDto {
    customerId?: number;
    arrivalTime?: moment.Moment | null;
}

export type ScheduleState = 0 | 1;